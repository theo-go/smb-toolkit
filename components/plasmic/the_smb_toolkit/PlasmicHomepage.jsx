// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: vZXZgeU1YqYWghemcQX2Q1
// Component: h0X7_Kol3yFf
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: MfRpGDkJ8b4/component
import HeroButton from "../../HeroButton"; // plasmic-import: IW0QnFgF_g4/component
import FunFactBox from "../../FunFactBox"; // plasmic-import: 6ql_UK2WJy/component
import TopicBox from "../../TopicBox"; // plasmic-import: 4mErNniXH-/component
import Cta from "../../Cta"; // plasmic-import: TsikC-dst8p/component
import Footer from "../../Footer"; // plasmic-import: VbkWmUKrYAc/component
import { useScreenVariants as useScreenVariantsgXe7KpKqBjNjl } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: gXe7KpKqBjNJL/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_the_smb_toolkit.module.css"; // plasmic-import: vZXZgeU1YqYWghemcQX2Q1/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: h0X7_Kol3yFf/css

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

function PlasmicHomepage__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsgXe7KpKqBjNjl()
  });

  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"navAndHero"}
            data-plasmic-override={overrides.navAndHero}
            className={classNames(projectcss.all, sty.navAndHero)}
          >
            <Navbar
              data-plasmic-name={"navbar"}
              data-plasmic-override={overrides.navbar}
              className={classNames("__wab_instance", sty.navbar)}
            />

            <div
              data-plasmic-name={"hero"}
              data-plasmic-override={overrides.hero}
              className={classNames(projectcss.all, sty.hero)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__zW3Kd)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__nj8FU
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    <h1
                      data-plasmic-name={"h1"}
                      data-plasmic-override={overrides.h1}
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__qsa5
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>{""}</React.Fragment>
                            <h2
                              data-plasmic-name={"h2"}
                              data-plasmic-override={overrides.h2}
                              className={classNames(
                                projectcss.all,
                                projectcss.h2,
                                projectcss.__wab_text,
                                sty.h2
                              )}
                            >
                              {
                                "If you have the vision,\nLet us give you the tools."
                              }
                            </h2>
                            <React.Fragment>{""}</React.Fragment>
                          </React.Fragment>
                        </h3>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h1>
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__sO2H
                  )}
                >
                  {"We're on a mission to simplify how small businesses scale."}
                </div>
              </p.Stack>

              <div className={classNames(projectcss.all, sty.freeBox__tn3Db)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__uVxI)}
                >
                  <HeroButton
                    boxTitle={"For Small Businesses"}
                    className={classNames(
                      "__wab_instance",
                      sty.heroButton__kLyzD
                    )}
                    slot={"Open source resources "}
                    slot2={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__lGzy
                        )}
                      >
                        {"Get access to resources on pitching"}
                      </div>
                    }
                    slot3={"A free toolkit forever"}
                    slot4={
                      "Our SMB toolkit gives you free access to the know-hows of growing your business, particularly in the digital age we live in."
                    }
                    slot5={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___3CU6F
                        )}
                      >
                        {"Access our free toolkit"}
                      </div>
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jb8Gq
                      )}
                    >
                      {"Learn how to scale your business"}
                    </div>
                  </HeroButton>

                  <HeroButton
                    boxTitle={"For Cities & Investors"}
                    className={classNames(
                      "__wab_instance",
                      sty.heroButton___7LjY3
                    )}
                    slot={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ujoyj
                        )}
                      >
                        {"Get access to trending businesses"}
                      </div>
                    }
                    slot2={"Get access to Basil Labs' database"}
                    slot3={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__uvA6E
                        )}
                      >
                        {"Benchmark SMBs"}
                      </div>
                    }
                    slot4={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0JbQm
                        )}
                      >
                        {
                          "Just like our SMB toolkit, our toolkit for cities & investors is streamlined for identifying strong investments and avoiding investment risks."
                        }
                      </div>
                    }
                    slot5={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___6H3Wo
                        )}
                      >
                        {"Chat with us about SMBs"}
                      </div>
                    }
                  >
                    {"Learn your retail tourism readiness"}
                  </HeroButton>
                </p.Stack>
              </div>
            </div>
          </div>

          <div
            data-plasmic-name={"factsAboutBusinesses"}
            data-plasmic-override={overrides.factsAboutBusinesses}
            className={classNames(projectcss.all, sty.factsAboutBusinesses)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__fRmXi
              )}
            >
              {"Why build an SMB toolkit?"}
            </div>

            <div className={classNames(projectcss.all, sty.freeBox__zevzp)}>
              <div className={classNames(projectcss.all, sty.freeBox__bDqnl)}>
                <FunFactBox
                  className={classNames(
                    "__wab_instance",
                    sty.funFactBox__fovXj
                  )}
                />

                <FunFactBox
                  className={classNames(
                    "__wab_instance",
                    sty.funFactBox__fDuXv
                  )}
                  slot={"50"}
                  slot2={"of all jobs worldwide"}
                  unnamedVariant3={true}
                >
                  {"Small businesses account for..."}
                </FunFactBox>

                <FunFactBox
                  className={classNames(
                    "__wab_instance",
                    sty.funFactBox__p7Ngm
                  )}
                  slot={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__x9Kdx
                        )}
                      >
                        {"3"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__y929S
                        )}
                      >
                        {"."}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___510Sc
                        )}
                      >
                        {"5"}
                      </div>
                    </React.Fragment>
                  }
                  unnamedVariant2={true}
                >
                  {"Small businesses account for..."}
                </FunFactBox>

                <FunFactBox
                  className={classNames("__wab_instance", sty.funFactBox__ri5I)}
                  slot={"400"}
                  unnamedVariant={true}
                />

                <FunFactBox
                  className={classNames(
                    "__wab_instance",
                    sty.funFactBox__l3RAi
                  )}
                  slot={"40"}
                  slot2={"of national income in emerging economies"}
                  unnamedVariant4={true}
                >
                  {"SMEs contribute up to..."}
                </FunFactBox>

                <FunFactBox
                  className={classNames(
                    "__wab_instance",
                    sty.funFactBox__r9M7W
                  )}
                  slot={"7"}
                  slot2={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__p0Geu
                      )}
                    >
                      {"formal jobs are generated by SMEs"}
                    </div>
                  }
                  slot3={"/10"}
                  unnamedVariant5={true}
                >
                  {"In emerging markets,"}
                </FunFactBox>
              </div>
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__jpbAo
              )}
            >
              {"We're on a mission to empower businesses."}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__obKjP
              )}
            >
              {"Join us in our mission"}
            </div>
          </div>

          <div
            data-plasmic-name={"restOfPage"}
            data-plasmic-override={overrides.restOfPage}
            className={classNames(projectcss.all, sty.restOfPage)}
          >
            <div
              data-plasmic-name={"checklistDemo"}
              data-plasmic-override={overrides.checklistDemo}
              className={classNames(projectcss.all, sty.checklistDemo)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__x6MtE
                )}
              >
                {"Why build an SMB toolkit?"}
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"columns"}
                data-plasmic-override={overrides.columns}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns)}
              >
                <div className={classNames(projectcss.all, sty.column__acq6H)}>
                  <p.PlasmicImg
                    data-plasmic-name={"img"}
                    data-plasmic-override={overrides.img}
                    alt={""}
                    className={classNames(sty.img)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/the_smb_toolkit/images/mainGraphicpng.png",
                      fullWidth: 2224,
                      fullHeight: 1850,
                      aspectRatio: undefined
                    }}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__rqApw)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mKKuD
                    )}
                  >
                    {"Our checklist is here to help you grow!"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vswZ5
                    )}
                  >
                    {
                      "Get access to everything you need to know to take your business to the nexr level."
                    }
                  </div>
                </div>
              </p.Stack>
            </div>

            <div
              data-plasmic-name={"topicsToLearn"}
              data-plasmic-override={overrides.topicsToLearn}
              className={classNames(projectcss.all, sty.topicsToLearn)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___7KjD
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__z4Iuy
                    )}
                  >
                    {"What will you up your game on today?"}
                  </h3>
                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__g4Qr9)}>
                <TopicBox
                  className={classNames("__wab_instance", sty.topicBox__nwSbs)}
                  slot={"Marketing"}
                />

                <TopicBox
                  className={classNames("__wab_instance", sty.topicBox__ocyq1)}
                  img={{
                    src: "/plasmic/the_smb_toolkit/images/legalpng.png",
                    fullWidth: 470,
                    fullHeight: 486,
                    aspectRatio: undefined
                  }}
                  slot={"Legal"}
                  unnamedVariant={true}
                />

                <TopicBox
                  className={classNames("__wab_instance", sty.topicBox__jj69F)}
                  img={{
                    src: "/plasmic/the_smb_toolkit/images/capitalpng.png",
                    fullWidth: 449,
                    fullHeight: 448,
                    aspectRatio: undefined
                  }}
                  slot={"Access to Capital"}
                  unnamedVariant2={true}
                />
              </div>
            </div>

            <Cta
              data-plasmic-name={"cta"}
              data-plasmic-override={overrides.cta}
              className={classNames("__wab_instance", sty.cta)}
            />

            <Footer
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames("__wab_instance", sty.footer)}
            />
          </div>
        </p.Stack>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "navAndHero",
    "navbar",
    "hero",
    "h1",
    "h2",
    "factsAboutBusinesses",
    "restOfPage",
    "checklistDemo",
    "columns",
    "img",
    "topicsToLearn",
    "cta",
    "footer"
  ],

  navAndHero: ["navAndHero", "navbar", "hero", "h1", "h2"],
  navbar: ["navbar"],
  hero: ["hero", "h1", "h2"],
  h1: ["h1", "h2"],
  h2: ["h2"],
  factsAboutBusinesses: ["factsAboutBusinesses"],
  restOfPage: [
    "restOfPage",
    "checklistDemo",
    "columns",
    "img",
    "topicsToLearn",
    "cta",
    "footer"
  ],

  checklistDemo: ["checklistDemo", "columns", "img"],
  columns: ["columns", "img"],
  img: ["img"],
  topicsToLearn: ["topicsToLearn"],
  cta: ["cta"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navAndHero: makeNodeComponent("navAndHero"),
    navbar: makeNodeComponent("navbar"),
    hero: makeNodeComponent("hero"),
    h1: makeNodeComponent("h1"),
    h2: makeNodeComponent("h2"),
    factsAboutBusinesses: makeNodeComponent("factsAboutBusinesses"),
    restOfPage: makeNodeComponent("restOfPage"),
    checklistDemo: makeNodeComponent("checklistDemo"),
    columns: makeNodeComponent("columns"),
    img: makeNodeComponent("img"),
    topicsToLearn: makeNodeComponent("topicsToLearn"),
    cta: makeNodeComponent("cta"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
