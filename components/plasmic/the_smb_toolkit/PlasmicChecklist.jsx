// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: vZXZgeU1YqYWghemcQX2Q1
// Component: uN9VsJ5tvm
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: MfRpGDkJ8b4/component
import Cta from "../../Cta"; // plasmic-import: TsikC-dst8p/component
import Footer from "../../Footer"; // plasmic-import: VbkWmUKrYAc/component
import { useScreenVariants as useScreenVariantsgXe7KpKqBjNjl } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: gXe7KpKqBjNJL/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_the_smb_toolkit.module.css"; // plasmic-import: vZXZgeU1YqYWghemcQX2Q1/projectcss
import sty from "./PlasmicChecklist.module.css"; // plasmic-import: uN9VsJ5tvm/css

export const PlasmicChecklist__VariantProps = new Array();

export const PlasmicChecklist__ArgProps = new Array();

function PlasmicChecklist__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsgXe7KpKqBjNjl()
  });

  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <Navbar
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames("__wab_instance", sty.navbar)}
          />

          <div
            data-plasmic-name={"hero"}
            data-plasmic-override={overrides.hero}
            className={classNames(projectcss.all, sty.hero)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__tt59X)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__yYsQs
                )}
              >
                {"Grow your Business"}
              </div>
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__kVln)}
            >
              <div className={classNames(projectcss.all, sty.column__aiGp)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zc8A
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                    "facts"
                  ) : (
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <h3
                        data-plasmic-name={"h3"}
                        data-plasmic-override={overrides.h3}
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3
                        )}
                      >
                        {"What you get."}
                      </h3>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  )}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bUBif
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"we're on a misssion"}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  ) : (
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Learn how to scale your business"}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  )}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ic75H
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Enter some text"
                    : "Get access to a checklist of everything you need to know in order to grow your business."}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rlnHa
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                    "we're on a misssion"
                  ) : (
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Access to open source resouces"}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  )}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__snc2K
                  )}
                >
                  {"Get access to no-nonsense real world advice."}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dQDs
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                    "we're on a misssion"
                  ) : (
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Access to open source resouces"}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  )}
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.column__a6JuX)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__nBKhj)}
                  displayHeight={"auto"}
                  displayMaxHeight={"600px"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/the_smb_toolkit/images/fullFrame1Png.png",
                    fullWidth: 972,
                    fullHeight: 636,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>
          </div>

          <div
            data-plasmic-name={"checklist"}
            data-plasmic-override={overrides.checklist}
            className={classNames(projectcss.all, sty.checklist)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___1XgPq
              )}
            >
              {"Checklist"}
            </div>

            <div className={classNames(projectcss.all, sty.freeBox__lzeUs)}>
              <div className={classNames(projectcss.all, sty.freeBox__v4G)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__oonOe)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__ftlu6)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__qnDnf)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__ts3Gu)}
                        displayHeight={"auto"}
                        displayMaxHeight={"280px"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"300px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/the_smb_toolkit/images/marketingAllpng.png",
                          fullWidth: 379,
                          fullHeight: 307,
                          aspectRatio: undefined
                        }}
                      />

                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__lPx9Q)}
                        displayHeight={"auto"}
                        displayMaxHeight={"280px"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"300px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/the_smb_toolkit/images/legalAllpng2.png",
                          fullWidth: 379,
                          fullHeight: 307,
                          aspectRatio: undefined
                        }}
                      />

                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__emtTu)}
                        displayHeight={"auto"}
                        displayMaxHeight={"280px"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"300px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/the_smb_toolkit/images/accessCapitalAllpng.png",
                          fullWidth: 376,
                          fullHeight: 307,
                          aspectRatio: undefined
                        }}
                      />
                    </p.Stack>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__tLa1Y)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___6Uajn
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___1HTdo
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {
                              "Get the toolkit you need to take your business to the next level!"
                            }
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                        </React.Fragment>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__i78IF
                        )}
                      >
                        {"Access Checklist Here 🚀 "}
                      </div>
                    </div>
                  </div>
                </p.Stack>
              </div>
            </div>
          </div>

          <Cta
            data-plasmic-name={"cta"}
            data-plasmic-override={overrides.cta}
            className={classNames("__wab_instance", sty.cta)}
          />

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "navbar", "hero", "h3", "checklist", "cta", "footer"],
  navbar: ["navbar"],
  hero: ["hero", "h3"],
  h3: ["h3"],
  checklist: ["checklist"],
  cta: ["cta"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicChecklist__ArgProps,
      internalVariantPropNames: PlasmicChecklist__VariantProps
    });

    return PlasmicChecklist__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicChecklist";
  } else {
    func.displayName = `PlasmicChecklist.${nodeName}`;
  }
  return func;
}

export const PlasmicChecklist = Object.assign(
  // Top-level PlasmicChecklist renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    hero: makeNodeComponent("hero"),
    h3: makeNodeComponent("h3"),
    checklist: makeNodeComponent("checklist"),
    cta: makeNodeComponent("cta"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicChecklist
    internalVariantProps: PlasmicChecklist__VariantProps,
    internalArgProps: PlasmicChecklist__ArgProps
  }
);

export default PlasmicChecklist;
/* prettier-ignore-end */
